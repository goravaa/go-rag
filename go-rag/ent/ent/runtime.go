// Code generated by ent, DO NOT EDIT.

package ent

import (
	"go-rag/ent/ent/document"
	"go-rag/ent/ent/project"
	"go-rag/ent/ent/securityquestion"
	"go-rag/ent/ent/session"
	"go-rag/ent/ent/user"
	"go-rag/ent/ent/userprompt"
	"go-rag/ent/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	documentFields := schema.Document{}.Fields()
	_ = documentFields
	// documentDescStatus is the schema descriptor for status field.
	documentDescStatus := documentFields[3].Descriptor()
	// document.DefaultStatus holds the default value on creation for the status field.
	document.DefaultStatus = documentDescStatus.Default.(string)
	// documentDescCreatedAt is the schema descriptor for created_at field.
	documentDescCreatedAt := documentFields[4].Descriptor()
	// document.DefaultCreatedAt holds the default value on creation for the created_at field.
	document.DefaultCreatedAt = documentDescCreatedAt.Default.(func() time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreatedAt is the schema descriptor for created_at field.
	projectDescCreatedAt := projectFields[2].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the created_at field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	securityquestionFields := schema.SecurityQuestion{}.Fields()
	_ = securityquestionFields
	// securityquestionDescQuestion is the schema descriptor for question field.
	securityquestionDescQuestion := securityquestionFields[1].Descriptor()
	// securityquestion.QuestionValidator is a validator for the "question" field. It is called by the builders before save.
	securityquestion.QuestionValidator = securityquestionDescQuestion.Validators[0].(func(string) error)
	// securityquestionDescAnswer is the schema descriptor for answer field.
	securityquestionDescAnswer := securityquestionFields[2].Descriptor()
	// securityquestion.AnswerValidator is a validator for the "answer" field. It is called by the builders before save.
	securityquestion.AnswerValidator = securityquestionDescAnswer.Validators[0].(func(string) error)
	// securityquestionDescCreatedAt is the schema descriptor for created_at field.
	securityquestionDescCreatedAt := securityquestionFields[3].Descriptor()
	// securityquestion.DefaultCreatedAt holds the default value on creation for the created_at field.
	securityquestion.DefaultCreatedAt = securityquestionDescCreatedAt.Default.(func() time.Time)
	// securityquestionDescUpdatedAt is the schema descriptor for updated_at field.
	securityquestionDescUpdatedAt := securityquestionFields[4].Descriptor()
	// securityquestion.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	securityquestion.DefaultUpdatedAt = securityquestionDescUpdatedAt.Default.(func() time.Time)
	// securityquestion.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	securityquestion.UpdateDefaultUpdatedAt = securityquestionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// securityquestionDescID is the schema descriptor for id field.
	securityquestionDescID := securityquestionFields[0].Descriptor()
	// securityquestion.DefaultID holds the default value on creation for the id field.
	securityquestion.DefaultID = securityquestionDescID.Default.(func() uuid.UUID)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[7].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmailConfirmed is the schema descriptor for email_confirmed field.
	userDescEmailConfirmed := userFields[3].Descriptor()
	// user.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	user.DefaultEmailConfirmed = userDescEmailConfirmed.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	userpromptFields := schema.UserPrompt{}.Fields()
	_ = userpromptFields
	// userpromptDescCreatedAt is the schema descriptor for created_at field.
	userpromptDescCreatedAt := userpromptFields[1].Descriptor()
	// userprompt.DefaultCreatedAt holds the default value on creation for the created_at field.
	userprompt.DefaultCreatedAt = userpromptDescCreatedAt.Default.(func() time.Time)
}
